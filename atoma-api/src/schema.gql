# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Compound {
  name: String!
  reducedFormula: String
  uuid: String!
}

type CompoundData {
  compoundProperty: CompoundProperty!
  pressure: Float
  temperature: Float
  uuid: String!
  value: String!
}

input CompoundPropertiesInput {
  after: String
  before: String
  compoundUuid: String!
  limit: Int!
}

type CompoundProperty {
  compound: Compound!
  compoundUuid: String!
  property: Property!
  propertyUuid: String!
  uuid: String!
}

input ConditionInput {
  value: Float!
  variable: String!
}

input CreateCompoundDataInput {
  compoundUuid: String!
  conditions: [ConditionInput!]!
  propertyUuid: String!
  value: Float!
}

union CreateCompoundDataResult = CompoundData | NotFoundError

input CreateCompoundInput {
  name: String!
  reducedFormula: String!
}

input CreatePropertyInput {
  description: String!
  key: String!
  name: String!
  type: String!
  units: String!
}

union FindCompoundResult = Compound | NotFoundError

input FindPaginatedInput {
  after: String
  before: String
  limit: Int!
}

type Mutation {
  createCompound(payload: CreateCompoundInput!): Compound!
  createCompoundData(payload: CreateCompoundDataInput!): CreateCompoundDataResult!
  createProperty(payload: CreatePropertyInput!): Property!
}

type NotFoundError {
  code: String!
  message: String!
}

type PaginatedCompoundProperties {
  data: [CompoundProperty!]
  nextCursor: String
  prevCursor: String
}

type PaginatedCompounds {
  data: [Compound!]
  nextCursor: String
  prevCursor: String
}

type PaginatedProperties {
  data: [Property!]
  nextCursor: String
  prevCursor: String
}

type Property {
  description: String!
  key: String!
  name: String!
  type: String!
  units: String!
  uuid: String!
}

type Query {
  compound(name: String!): FindCompoundResult!
  compoundProperties(input: CompoundPropertiesInput!): PaginatedCompoundProperties!
  compounds(options: FindPaginatedInput!): PaginatedCompounds!
  properties(options: FindPaginatedInput!): PaginatedProperties!
}